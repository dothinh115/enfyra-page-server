{
    "column_definition": {
        "name": "column_definition",
        "description": "Stores column/field definitions for all tables in the system",
        "isSystem": true,
        "uniques": [["name", "table"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Column name in the database" },
            { "name": "type", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Data type of the column (varchar, int, boolean, etc.)" },
            { "name": "isGenerated", "type": "boolean", "isNullable": true, "isSystem": true, "defaultValue": false, "description": "Whether the value is auto-generated by the system" },
            { "name": "isPrimary", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this column is a primary key" },
            { "name": "isNullable", "type": "boolean", "isSystem": true, "defaultValue": true, "description": "Whether NULL values are allowed" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined column" },
            { "name": "defaultValue", "type": "simple-json", "isNullable": true, "isSystem": true, "description": "Default value for the column when inserting new records" },
            { "name": "options", "type": "simple-json", "isNullable": true, "isSystem": true, "description": "Additional options like enum values, array items, or validation rules" },
            { "name": "isUpdatable", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the column can be updated after creation" },
            { "name": "isHidden", "type": "boolean", "isNullable": true, "isSystem": true, "defaultValue": false, "description": "Whether to hide this column from API responses" },
            { "name": "description", "type": "richtext", "isSystem": true, "description": "Rich text description of the column's purpose" },
            { "name": "placeholder", "type": "text", "isSystem": true, "description": "Placeholder text for form inputs" }
        ],
        "relations": [
            { "propertyName": "table", "type": "many-to-one", "targetTable": "table_definition", "isSystem": true, "inversePropertyName": "columns", "isInverseEager": true, "description": "The table that this column belongs to" }
        ]
    },
    "relation_definition": {
        "name": "relation_definition",
        "description": "Defines relationships between tables (one-to-one, one-to-many, many-to-one, many-to-many)",
        "isSystem": true,
        "uniques": [["propertyName", "sourceTable"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "type", "type": "enum", "isNullable": false, "isSystem": true, "options": ["one-to-one", "many-to-one", "one-to-many", "many-to-many"], "description": "Type of relationship between tables" },
            { "name": "propertyName", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Property name for accessing the relation in queries" },
            { "name": "inversePropertyName", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Property name on the target table for bidirectional relations" },
            { "name": "isNullable", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the relation can be null" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined relation" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of the relationship purpose" },
            { "name": "junctionTableName", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Name of the junction table for many-to-many relations" },
            { "name": "junctionSourceColumn", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Column name in junction table referencing source table" },
            { "name": "junctionTargetColumn", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Column name in junction table referencing target table" }
        ],
        "relations": [
            { "propertyName": "sourceTable", "type": "many-to-one", "targetTable": "table_definition", "isSystem": true, "inversePropertyName": "relations", "isInverseEager": true, "description": "The table where this relation is defined" },
            { "propertyName": "targetTable", "type": "many-to-one", "targetTable": "table_definition", "isSystem": true, "isNullable": false, "description": "The table that this relation points to" }
        ]
    },
    "table_definition": {
        "name": "table_definition",
        "description": "Stores metadata for all tables/collections in the database",
        "isSystem": true,
        "uniques": [["name"], ["alias"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Table name in the database" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system table" },
            { "name": "uniques", "type": "simple-json", "isNullable": true, "isSystem": true, "description": "Array of unique constraints (e.g., [['email'], ['name', 'parent']])" },
            { "name": "indexes", "type": "simple-json", "isNullable": true, "isSystem": true, "description": "Array of database indexes for performance optimization" },
            { "name": "alias", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Human-readable alias for the table" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of the table's purpose" }
        ]
    },
    "user_definition": {
        "name": "user_definition",
        "description": "Stores user accounts and authentication information",
        "isSystem": true,
        "uniques": [["email"]],
        "columns": [
            { "name": "id", "type": "uuid", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Unique user identifier (UUID)" },
            { "name": "email", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": null, "description": "User's email address (unique login identifier)" },
            { "name": "password", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": null, "isHidden": true, "description": "Hashed password for authentication" },
            { "name": "isRootAdmin", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "isUpdatable": false, "description": "Whether user has root admin privileges (cannot be changed)" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-generated user account" }
        ],
        "relations": [
            { "propertyName": "role", "type": "many-to-one", "isSystem": true, "targetTable": "role_definition", "description": "User's assigned role for permissions" }
        ]
    },
    "setting_definition": {
        "name": "setting_definition",
        "description": "Stores global system configuration and settings",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "isInit", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether the system has been initialized" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether these are system settings" },
            { "name": "projectName", "type": "varchar", "isSystem": true, "description": "Name of the project/application" },
            { "name": "projectDescription", "type": "text", "isSystem": true, "description": "Description of the project/application" },
            { "name": "projectUrl", "type": "varchar", "isSystem": true, "description": "URL of the project website" }
        ],
        "relations": []
    },
    "route_definition": {
        "name": "route_definition",
        "description": "Defines API routes/endpoints for the application",
        "isSystem": true,
        "uniques": [["path"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "path", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": null, "description": "URL path for the route (e.g., /api/users)" },
            { "name": "isEnabled", "type": "boolean", "isNullable": true, "isSystem": true, "defaultValue": false, "description": "Whether the route is active and accessible" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined route" },
            { "name": "icon", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": "lucide:route", "description": "Icon identifier for UI display" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what the route does" }
        ],
        "relations": [
            { "propertyName": "targetTables", "type": "many-to-many", "targetTable": "table_definition", "isSystem": true, "description": "Additional tables that this route can access" },
            { "propertyName": "mainTable", "type": "many-to-one", "targetTable": "table_definition", "isSystem": true, "description": "Primary table that this route operates on" }
        ]
    },
    "role_definition": {
        "name": "role_definition",
        "description": "Defines user roles for permission management",
        "isSystem": true,
        "uniques": [["name"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": null, "description": "Unique role name (e.g., Admin, Editor, Viewer)" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of the role's purpose and permissions" }
        ]
    },
    "route_permission_definition": {
        "name": "route_permission_definition",
        "description": "Maps permissions between roles, users, and routes",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether this permission rule is active" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what this permission allows" }
        ],
        "relations": [
            { "propertyName": "role", "type": "many-to-one", "isSystem": true, "targetTable": "role_definition", "inversePropertyName": "routePermissions", "description": "Role that this permission applies to" },
            { "propertyName": "route", "type": "many-to-one", "isSystem": true, "targetTable": "route_definition", "inversePropertyName": "routePermissions", "description": "Route that this permission controls access to" },
            { "propertyName": "allowedUsers", "type": "many-to-many", "isSystem": true, "targetTable": "user_definition", "inversePropertyName": "allowedRoutePermissions", "description": "Specific users who have this permission" }
        ]
    },
    "route_handler_definition": {
        "name": "route_handler_definition",
        "description": "Stores custom logic handlers for route endpoints",
        "uniques": [["route", "method"]],
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "logic", "type": "code", "isSystem": true, "isNullable": true, "description": "Custom JavaScript/TypeScript code to execute for this route" },
            { "name": "timeout", "type": "int", "isSystem": true, "isNullable": true, "description": "Timeout in milliseconds for route handler execution. If not set, uses default system timeout." },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what this handler does" }
        ],
        "relations": [
            { "propertyName": "route", "type": "many-to-one", "targetTable": "route_definition", "isSystem": true, "inversePropertyName": "handlers", "isNullable": true, "description": "The route this handler is attached to" },
            { "propertyName": "method", "type": "many-to-one", "targetTable": "method_definition", "isSystem": true, "inversePropertyName": "handlers", "isNullable": true, "description": "HTTP method (GET, POST, etc.) this handler responds to" }
        ]
    },
    "hook_definition": {
        "name": "hook_definition",
        "description": "Defines lifecycle hooks that run before/after route execution",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isSystem": true, "isNullable": false, "description": "Descriptive name for the hook" },
            { "name": "preHook", "type": "code", "isNullable": true, "isSystem": true, "description": "Code to execute before the main route handler" },
            { "name": "afterHook", "type": "code", "isNullable": true, "isSystem": true, "description": "Code to execute after the main route handler" },
            { "name": "preHookTimeout", "type": "int", "isSystem": true, "isNullable": true, "description": "Timeout in milliseconds for preHook execution. If not set, uses default system timeout." },
            { "name": "afterHookTimeout", "type": "int", "isSystem": true, "isNullable": true, "description": "Timeout in milliseconds for afterHook execution. If not set, uses default system timeout." },
            { "name": "priority", "type": "int", "isNullable": true, "isSystem": true, "defaultValue": 0, "description": "Execution order (lower numbers execute first)" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether the hook is active" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what the hook does" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined hook" }
        ],
        "relations": [
            { "propertyName": "route", "type": "many-to-one", "targetTable": "route_definition", "isSystem": true, "inversePropertyName": "hooks", "description": "Route this hook is attached to (null for global hooks)" },
            { "propertyName": "methods", "type": "many-to-many", "targetTable": "method_definition", "isSystem": true, "inversePropertyName": "hooks", "description": "HTTP methods this hook applies to" }
        ]
    },
    "session_definition": {
        "name": "session_definition",
        "description": "Stores active user sessions and authentication tokens",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "uuid", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Unique session identifier" },
            { "name": "expiredAt", "type": "date", "isNullable": false, "isSystem": true, "defaultValue": "now", "description": "When the session expires" },
            { "name": "remember", "type": "boolean", "isSystem": true, "defaultValue": false, "description": "Whether this is a long-lived 'remember me' session" }
        ],
        "relations": [
            { "propertyName": "user", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": false, "description": "User who owns this session" }
        ]
    },
    "schema_history": {
        "name": "schema_history",
        "description": "Tracks database schema changes and migrations",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "schema", "type": "simple-json", "isNullable": false, "isSystem": true, "description": "Full schema snapshot at this point in time" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of changes made in this version" },
            { "name": "hash", "type": "text", "isSystem": true, "description": "Hash of the schema for comparison and integrity checking" }
        ]
    },
    "method_definition": {
        "name": "method_definition",
        "description": "Defines available HTTP methods (GET, POST, etc.) and GraphQL operations",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "method", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Method name (GET, POST, PATCH, DELETE, GQL_QUERY, GQL_MUTATION)" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined method" }
        ],
        "relations": [
            { "propertyName": "route_permissions", "type": "many-to-many", "targetTable": "route_permission_definition", "isSystem": true, "inversePropertyName": "methods", "description": "Permissions associated with this method" },
            { "propertyName": "routes", "type": "many-to-many", "targetTable": "route_definition", "isSystem": true, "inversePropertyName": "publishedMethods", "description": "Routes that support this method" }
        ]
    },
    "menu_definition": {
        "name": "menu_definition",
        "description": "Defines the navigation menu structure for the application",
        "uniques": [
            ["type", "label"],
            ["type", "sidebar", "label"],
            ["path"]
        ],
        "indexes": [["order"]],
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "type", "type": "enum", "isNullable": false, "isSystem": true, "options": ["Dropdown Menu", "Menu"], "description": "Type of menu item (Dropdown Menu can have children, Menu is a leaf node)" },
            { "name": "label", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Display text for the menu item" },
            { "name": "icon", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": "lucide:menu", "description": "Icon identifier for the menu item" },
            { "name": "path", "type": "varchar", "isNullable": true, "isSystem": true, "description": "URL path the menu item links to" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the menu item is visible" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined menu item" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of the menu item's purpose" },
            { "name": "order", "type": "int", "isNullable": false, "isSystem": true, "defaultValue": 0, "description": "Display order within parent (lower numbers appear first)" },
            { "name": "permission", "type": "simple-json", "isNullable": true, "isSystem": true, "description": "Permission rules controlling who can see this menu item" }
        ],
        "relations": [
            { "propertyName": "parent", "type": "many-to-one", "targetTable": "menu_definition", "isSystem": true, "inversePropertyName": "children", "isNullable": true, "description": "Parent menu item (null for top-level items)" }
        ]
    },
    "extension_definition": {
        "name": "extension_definition",
        "description": "Stores custom UI extensions (pages and widgets) written in React/Vue",
        "isSystem": true,
        "uniques": [["menu"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "type", "type": "enum", "options": ["page", "widget"], "isNullable": false, "isSystem": true, "defaultValue": "page", "description": "Type of extension (full page or embeddable widget)" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "isGenerated": false, "description": "Human-readable name for the extension" },
            { "name": "extensionId", "type": "varchar", "isNullable": false, "isSystem": true, "isGenerated": true, "description": "Unique identifier for the extension (auto-generated)" },
            { "name": "version", "type": "varchar", "isNullable": false, "isSystem": true, "defaultValue": "1.0.0", "description": "Version number of the extension" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the extension is active" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-defined extension" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what the extension does" },
            { "name": "compiledCode", "type": "code", "isSystem": true, "isNullable": false, "isGenerated": true, "description": "Compiled/bundled JavaScript code ready for execution" },
            { "name": "code", "type": "code", "isSystem": true, "isNullable": false, "description": "Source code for the extension (React/Vue component)" }
        ],
        "relations": [
            { "propertyName": "menu", "type": "one-to-one", "targetTable": "menu_definition", "isSystem": true, "inversePropertyName": "extension", "isNullable": true, "description": "Menu item that links to this extension" },
            { "propertyName": "createdBy", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": true, "description": "User who created this extension" },
            { "propertyName": "updatedBy", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": true, "description": "User who last updated this extension" }
        ]
    },
    "folder_definition": {
        "name": "folder_definition",
        "description": "Organizes files into a hierarchical folder structure",
        "isSystem": true,
        "uniques": [["slug", "parent"]],
        "indexes": [["order"], ["parent"]],
        "columns": [
            { "name": "id", "type": "uuid", "isPrimary": true, "isGenerated": true, "isNullable": false, "description": "Unique folder identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "description": "Folder display name" },
            { "name": "slug", "type": "varchar", "isNullable": false, "isGenerated": true, "description": "URL-friendly folder name (auto-generated from name)" },
            { "name": "order", "type": "int", "isNullable": false, "defaultValue": 0, "description": "Display order within parent folder" },
            { "name": "icon", "type": "varchar", "isNullable": true, "defaultValue": "lucide:folder", "description": "Icon identifier for the folder" },
            { "name": "description", "type": "text", "isNullable": true, "description": "Description of the folder's purpose" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "defaultValue": false, "description": "Whether this is a system-defined folder" }
        ],
        "relations": [
            { "propertyName": "parent", "type": "many-to-one", "targetTable": "folder_definition", "isNullable": true, "inversePropertyName": "children", "description": "Parent folder (null for root folders)" },
            { "propertyName": "user", "type": "many-to-one", "targetTable": "user_definition", "isNullable": true, "description": "User who owns this folder" }
        ]
    },
    "file_definition": {
        "name": "file_definition",
        "description": "Stores uploaded files and their metadata",
        "isSystem": true,
        "uniques": [["location"]],
        "indexes": [["filesize"], ["status"], ["isPublished"]],
        "columns": [
            { "name": "id", "type": "uuid", "isPrimary": true, "isGenerated": true, "isNullable": false, "description": "Unique file identifier" },
            { "name": "filename", "type": "varchar", "isNullable": false, "description": "Original filename including extension" },
            { "name": "isPublished", "type": "boolean", "isNullable": false, "defaultValue": true, "description": "Allow public access without authentication" },
            { "name": "mimetype", "type": "varchar", "isNullable": false, "isGenerated": true, "description": "MIME type of the file (e.g., image/png, application/pdf)" },
            { "name": "filesize", "type": "bigint", "isNullable": false, "isGenerated": true, "description": "File size in bytes" },
            { "name": "storage", "type": "varchar", "isNullable": true, "defaultValue": "local", "isGenerated": true, "description": "Storage backend (local, s3, etc.)" },
            { "name": "location", "type": "varchar", "isNullable": false, "isGenerated": true, "description": "Full path or URL to the file" },
            { "name": "description", "type": "text", "isNullable": true, "description": "Description or notes about the file" },
            { "name": "status", "type": "enum", "isNullable": false, "options": ["active", "archived", "quarantine"], "defaultValue": "active", "description": "File status (active, archived, or quarantined)" }
        ],
        "relations": [
            { "propertyName": "folder", "type": "many-to-one", "targetTable": "folder_definition", "isNullable": true, "inversePropertyName": "files", "description": "Folder containing this file" },
            { "propertyName": "uploaded_by", "type": "many-to-one", "targetTable": "user_definition", "isNullable": true, "isGenerated": true, "description": "User who uploaded the file" }
        ]
    },
    "file_permission_definition": {
        "name": "file_permission_definition",
        "description": "Controls access permissions for files",
        "isSystem": true,
        "uniques": [["file", "role", "allowedUsers"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "description": "Primary key identifier" },
            { "name": "actions", "type": "array-select", "options": ["view", "edit", "delete", "share", "download"], "isNullable": true, "description": "Allowed actions for this permission" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "defaultValue": true, "description": "Enable/disable this permission rule" },
            { "name": "allowedDomains", "type": "simple-json", "isNullable": true, "description": "List of allowed domains for CORS (null = all domains)" },
            { "name": "description", "type": "text", "isNullable": true, "description": "Description of what this permission allows" }
        ],
        "relations": [
            { "propertyName": "file", "type": "many-to-one", "targetTable": "file_definition", "isNullable": true, "inversePropertyName": "permissions", "description": "File this permission applies to" },
            { "propertyName": "role", "type": "many-to-one", "targetTable": "role_definition", "isNullable": true, "description": "Role that has this permission" },
            { "propertyName": "allowedUsers", "type": "many-to-one", "targetTable": "user_definition", "isNullable": true, "description": "Specific users who have this permission" }
        ]
    },
    "package_definition": {
        "name": "package_definition",
        "description": "Manages npm packages installed in the application (frontend and backend)",
        "isSystem": true,
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "isGenerated": false, "description": "NPM package name (e.g., lodash, express)" },
            { "name": "version", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Actual installed version from node_modules", "defaultValue": "latest" },
            { "name": "flags", "type": "varchar", "isNullable": true, "isSystem": true, "description": "Install flags like '--ignore-engines --force'" },
            { "name": "type", "type": "enum", "isNullable": false, "options": ["App", "Backend"], "description": "Whether this is a frontend (App) or backend package" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the package is currently active" },
            { "name": "description", "type": "text", "isNullable": true, "isSystem": true, "description": "Short package description" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a core system package" }
        ],
        "relations": [
            { "propertyName": "installedBy", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": false, "description": "User who installed this package" }
        ]
    },
    "bootstrap_script_definition": {
        "name": "bootstrap_script_definition",
        "description": "Stores custom scripts that run during application initialization",
        "isSystem": true,
        "uniques": [["name"]],
        "columns": [
            { "name": "id", "type": "int", "isPrimary": true, "isGenerated": true, "isNullable": false, "isSystem": true, "description": "Primary key identifier" },
            { "name": "name", "type": "varchar", "isNullable": false, "isSystem": true, "description": "Unique name identifier for the bootstrap script" },
            { "name": "description", "type": "text", "isSystem": true, "description": "Description of what the script does" },
            { "name": "logic", "type": "code", "isNullable": false, "isSystem": true, "description": "The actual script code to execute" },
            { "name": "timeout", "type": "int", "isSystem": true, "isNullable": true, "description": "Timeout in milliseconds for script execution. If not set, uses default system timeout." },
            { "name": "priority", "type": "int", "isNullable": false, "isSystem": true, "defaultValue": 0, "description": "Execution priority order (lower numbers execute first)" },
            { "name": "isEnabled", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": true, "description": "Whether the script is enabled for execution" },
            { "name": "isSystem", "type": "boolean", "isNullable": false, "isSystem": true, "defaultValue": false, "description": "Whether this is a system-generated script" }
        ],
        "relations": [
            { "propertyName": "createdBy", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": true, "description": "User who created the script" },
            { "propertyName": "updatedBy", "type": "many-to-one", "targetTable": "user_definition", "isSystem": true, "isNullable": true, "description": "User who last updated the script" }
        ]
    }
}
